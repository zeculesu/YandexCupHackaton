import cv2 as cv
import numpy as np

capture = cv.VideoCapture('rtsp://Admin:rtf123@192.168.2.251/251:554/1/1')

low_red = np.array([0, 100, 20])
high_red = np.array([10, 255, 255])

scale_down = 0.5

while True:
    ret, frame = capture.read()
    frame_hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV)
    only_red = cv.inRange(frame_hsv, low_red, high_red)

    only_red_scaled = cv.resize(only_red, None, fx= scale_down, fy= scale_down, interpolation= cv.INTER_LINEAR)

    cv.imshow("Capturing",only_red_scaled)

    if cv.waitKey(1) & 0xFF == ord('q'):
        break

capture.release()
cv.destroyAllWindows()



#GREEN
# lower_blue= np.array([78,158,124])
# upper_blue = np.array([138,255,255])


# BLUE
# low_red = np.array([78,158,124])
# high_red = np.array([138,255,255])


# RED
# low_red = np.array([0, 100, 20])
# high_red = np.array([10, 255, 255])

"""
локализация - где робот находится
персепшн - понять окружение - где дорожная инфраструктура, где статик объекты, где динамик объекты
что происходит вокруг робота.
Три сущности

статические препятсвия - обычно представляются 
динамические препятствия
атрибуты - горят ли у машины поворотники
атрибуты - какой сигнал горит у светофора

статические объекты - двумерная сетка
динамические объекты - трехмерные боксы. коорд центра, размерности

предикшн - где будут через 10-15 секунд динамические объекты
планирование - на основе предкишна персепшна
управление - 

смеантическая сегментация - еисть картинка, хотим каждому пикселю в соответствие поставить некоторый класс - категориальную величину. Класс для неба, клас для зеленой листвы, класс для дороги, класс для разметки
Как такие сетки работают - в контексте роботв - берут картинку, прогоняют слои, постепенно сжимают, страйды, потом картинку разжимают
и в каждом пикселе предсказывают черзе юмах чему 
ЛИДЕР БОРД ПЕПЕРС ВИЗ КОД И НАХОДИТЕ КУЧУ СЕТОК С ИХ КАЧЕСТВОМ И Т.Д.
но скорее всего та архитектура, которая у вас, будет похожим образом выглядеть

преобразование из плоскости в плоскость задается в виде матрицы 3 на 3
там 8 параметров с точностью до скейла
если знать такую матрицу, то можно понять, какому пикселю на новом изображении
будет соответствовать исходный пиксель
Есть координата пикселя х, у, дописываем третью координату х, у, 1
потом перемножаем че надо и снова делим на третью координату - чето такое
откуда такую матрицу можно взять - из общих соображений
lift-splat-shoot
предполагали что есть картинка, камера и из точки камеры (мы изнаем
где она расположена). Из камеры пропустить луч через каждый пиксель картинки
распределение вероятности вдоль луча - на каком расстоянии реально находится
та или иная точка 

действие на основе предикшна
это надо чтобы проложить дорогу

предикшн с шагом 0.1 сек и 1000 штук
тепловая карта и где этот объект окажется через некоторое время

сенсоры передают все в персепшн, локализацию, потом на этой основе есть предикшн
"""