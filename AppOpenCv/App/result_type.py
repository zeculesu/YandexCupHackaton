from dataclasses import dataclass
from typing import Generic, TypeVar, Union


""" Обобщенные типы для успешного результат (Т) и ошибки (Е) """
T = TypeVar('T') 
E = TypeVar('E')


@dataclass
class Ok(Generic[T]):
    """
    Представляет успешный результат операции.

    Атрибуты:
        value (T): Успешное значение операции.
    """
    value: T


@dataclass
class Error(Generic[E]):
    """
    Представляет ошибку в результате операции.

    Атрибуты:
        error (E): Описание ошибки.
    """
    error: E


class result_type(Generic[T, E]):
    """
    Обобщённый контейнер для хранения результата, который может быть успешным (Ok)
    или содержать ошибку (Err). Использует Union для этих двух типов.

    Методы:
        is_ok() -> bool: Возвращает True, если результат успешен (тип Ok).
        is_err() -> bool: Возвращает True, если результат содержит ошибку (тип Err).
        unwrap() -> T: Возвращает успешный результат или вызывает   исключение, если результат является ошибкой.
        unwrap_err() -> E: Возвращает ошибку или вызывает исключение, если результат успешен.
    """

    def __init__(self, result: Union[Ok[T], Error[E]]):
        """
        Инициализирует объект с результатом

        Параметры: 
            result(Union[Ok[T]], Error[E]]): Результат выполнения операции (успех или ошибка)
        """

        self.result = result

    def is_ok(self) -> bool:
        """
        Проверяет, является ли результат успешным.

        Возвращает:
            bool: True, если результат содержит успешное значение (Ok).
        """
        return isinstance(self.result, Ok)

    def is_err(self) -> bool:
        """
        Проверяет, содержит ли результат ошибку.

        Возвращает:
            bool: True, если результат содержит ошибку (Err).
        """

        return isinstance(self.result, Error)


    def unwrap(self) -> T:
        """ 
        Возвращает успешное значение результата.

        Если результат является ошибкой, выбрасывается исключение

        Возвращает:
            T: Успешное значение.

        Исключение:
            ValueError: Если резульатом является ошибка (Err).
        """
        if self.is_ok():
            return self.result.value
        else:
            raise ValueError(f'Попытка извлечь успешного результата ищ ошибки: {self.result}')

    def unwrap_err(self) -> E:
        """
        Возвращает ошибку, если результатом является ошибка.

        Если результат является успешным, выбрасывается исключение.

        Возвращает:
            E: Описание ошибкой

        Исключение: 
            ValueError: Если результатом является успех (Ok).
        """

        if self.is_err():
            return self.result.error
    
    def __repr__(self):
        """
        Возвращает строковое предстваление результата для удобного отображения.

        Возвращает:
            str: Строковое предстваление объекта Ok или Error
        """

        return repr(self.result)
